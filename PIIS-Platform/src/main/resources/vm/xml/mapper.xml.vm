<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">
    
    <resultMap id="${ClassName}Result" type="${ClassName}PO">
#foreach ($column in $columns)
        <result property="${column.javaField}"    column="${column.columnName}"    />
#end
        <collection property="documents" javaType="java.util.List" resultMap="tech.piis.modules.core.mapper.PiisDocumentMapper.documentResultMap"/>
    </resultMap>

    <resultMap id="unitsBizCountResultMap" type="UnitsBizCountVO">
        <result property="unitsId" column="units_id"/>
        <result property="orgId" column="org_id"/>
        <result property="orgName" column="org_name"/>
        <result property="count" column="count"/>
        <result property="createdTime" column="CREATED_TIME"/>
    </resultMap>

    <sql id="select${ClassName}Vo">
        select#foreach($column in $columns) $column.columnName#if($velocityCount != $columns.size()),#end#end from ${tableName}
    </sql>

    <select id="select${ClassName}Count" parameterType="java.lang.String"
            resultMap="unitsBizCountResultMap">
        select u.UNITS_ID,u.ORG_ID,u.ORG_NAME,u.created_time,count(d.UNITS_ID) as count
        from inspection_units u
        left join ${tableName} d on u.UNITS_ID = d.UNITS_ID
        where u.plan_id = #{planId}
        group by u.UNITS_ID
        order by u.created_time, u.UNITS_ID desc
    </select>

    <select id="select${ClassName}WithFileById" parameterType="${ClassName}PO"
            resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        doc.PIIS_DOC_ID,
        doc.OBJECT_ID,
        doc.FILE_DICT_ID,
        doc.FILE_NAME,
        doc.FILE_SIZE,
        doc.FILE_PATH
        left join piis_document doc on concat('xxx', c.CONSULT_INFO_ID) = doc.OBJECT_ID
        where c.CONSULT_INFO_ID = #{consultInfoId}
    </select>

    <select id="select${ClassName}List" parameterType="${ClassName}PO" resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>

    </select>
    
    <select id="select${ClassName}ById" parameterType="${pkColumn.javaType}" resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </select>
        
    <insert id="insert${ClassName}" parameterType="${ClassName}PO"#if($pkColumn.increment) useGeneratedKeys="true" keyProperty="$pkColumn.javaField"#end>
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
            <if test="$column.javaField != null #if($column.javaType == 'String' ) and $column.javaField != ''#end">$column.columnName,</if>
#end
#end
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
            <if test="$column.javaField != null #if($column.javaType == 'String' ) and $column.javaField != ''#end">#{$column.javaField},</if>
#end
#end
         </trim>
    </insert>

    <update id="update${ClassName}" parameterType="${ClassName}PO">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pkColumn.columnName)
            <if test="$column.javaField != null #if($column.javaType == 'String' ) and $column.javaField != ''#end">$column.columnName = #{$column.javaField},</if>
#end
#end
        </trim>
        where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </update>

    <delete id="delete${ClassName}ById" parameterType="${pkColumn.javaType}">
        delete from ${tableName} where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </delete>

    <delete id="delete${ClassName}ByIds" parameterType="String">
        delete from ${tableName} where ${pkColumn.columnName} in 
        <foreach item="${pkColumn.javaField}" collection="array" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>
    
</mapper>