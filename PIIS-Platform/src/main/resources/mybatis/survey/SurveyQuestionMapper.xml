<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.piis.modules.survey.mapper.SurveyQuestionMapper">

    <resultMap type="SurveyQuestionPO" id="SurveyQuestionResult">
        <result property="questionId" column="QUESTION_ID"/>
        <result property="planId" column="PLAN_ID"/>
        <result property="questionName" column="QUESTION_NAME"/>
        <result property="questionType" column="QUESTION_TYPE"/>
        <result property="type" column="TYPE"/>
        <result property="score" column="SCORE"/>
        <result property="rangeId" column="RANGE_ID"/>
        <result property="rangeName" column="RANGE_NAME"/>
        <result property="requiredFlag" column="REQUIRED_FLAG"/>
        <result property="businessType" column="BUSINESS_TYPE"/>
        <result property="referenceAnswer" column="REFERENCE_ANSWER"/>
        <result property="createdBy" column="CREATED_BY"/>
        <result property="createdTime" column="CREATED_TIME"/>
        <result property="updatedBy" column="UPDATED_BY"/>
        <result property="updatedTime" column="UPDATED_TIME"/>
        <result property="entId" column="ENT_ID"/>
        <collection property="optionList" javaType="java.util.List" resultMap="optionResultMap"/>
    </resultMap>

    <resultMap id="optionResultMap" type="SurveyOptionPO">
        <result property="optionId" column="OPTION_ID"/>
        <result property="optionName" column="OPTION_NAME"/>
    </resultMap>

    <select id="selectSurveyQuestionList" parameterType="SurveyQuestionPO" resultMap="SurveyQuestionResult">
        select
          q.QUESTION_ID,
          q.PLAN_ID,
          q.QUESTION_NAME,
          q.QUESTION_TYPE,
          q.SCORE,
          q.REQUIRED_FLAG,
          q.BUSINESS_TYPE,
          q.TYPE,
          q.REFERENCE_ANSWER,
          q.RANGE_ID,
          q.RANGE_NAME,
          q.CREATED_BY,
          q.CREATED_TIME,
          q.UPDATED_BY,
          q.UPDATED_TIME,
          o.OPTION_ID,
          o.OPTION_NAME
        from (
       select
         QUESTION_ID,
         PLAN_ID,
         QUESTION_NAME,
         QUESTION_TYPE,
         SCORE,
         REQUIRED_FLAG,
         BUSINESS_TYPE,
         TYPE,
         REFERENCE_ANSWER,
         RANGE_ID,
         RANGE_NAME,
         CREATED_BY,
         CREATED_TIME,
         UPDATED_BY,
         UPDATED_TIME
       from survey_question
       where TYPE = #{type}
       order by CREATED_TIME desc
       limit #{pageNum},#{pageSize}
     ) q
    left join survey_option o on q.QUESTION_ID = o.QUESTION_ID
    order by q.CREATED_TIME desc
    </select>

    <select id="selectQuestionRandom" resultMap="SurveyQuestionResult" parameterType="QuestionCountVO">
        (SELECT *
 FROM survey_question AS t1
   JOIN (SELECT ROUND(RAND() * ((SELECT MAX(QUESTION_ID)
                                 FROM survey_question) - (SELECT MIN(QUESTION_ID)
                                                          FROM survey_question)) + (SELECT MIN(QUESTION_ID)
                                                                                    FROM survey_question)) AS id) AS t2
 WHERE t1.QUESTION_ID >= t2.id
       and QUESTION_TYPE = 1
 ORDER BY t1.QUESTION_ID
 LIMIT 1)
union
(SELECT *
 FROM survey_question AS t1
   JOIN (SELECT ROUND(RAND() * ((SELECT MAX(QUESTION_ID)
                                 FROM survey_question) - (SELECT MIN(QUESTION_ID)
                                                          FROM survey_question)) + (SELECT MIN(QUESTION_ID)
                                                                                    FROM survey_question)) AS id) AS t2
 WHERE t1.QUESTION_ID >= t2.id
       and QUESTION_TYPE = 2
 ORDER BY t1.QUESTION_ID
 LIMIT 1)
union
(SELECT *
 FROM survey_question AS t1
   JOIN (SELECT ROUND(RAND() * ((SELECT MAX(QUESTION_ID)
                                 FROM survey_question) - (SELECT MIN(QUESTION_ID)
                                                          FROM survey_question)) + (SELECT MIN(QUESTION_ID)
                                                                                    FROM survey_question)) AS id) AS t2
 WHERE t1.QUESTION_ID >= t2.id
       and QUESTION_TYPE = 3
 ORDER BY t1.QUESTION_ID
 LIMIT 1)
union
(SELECT *
 FROM survey_question AS t1
   JOIN (SELECT ROUND(RAND() * ((SELECT MAX(QUESTION_ID)
                                 FROM survey_question) - (SELECT MIN(QUESTION_ID)
                                                          FROM survey_question)) + (SELECT MIN(QUESTION_ID)
                                                                                    FROM survey_question)) AS id) AS t2
 WHERE t1.QUESTION_ID >= t2.id
       and QUESTION_TYPE = 4
 ORDER BY t1.QUESTION_ID
 LIMIT 1)
union
(SELECT *
 FROM survey_question AS t1
   JOIN (SELECT ROUND(RAND() * ((SELECT MAX(QUESTION_ID)
                                 FROM survey_question) - (SELECT MIN(QUESTION_ID)
                                                          FROM survey_question)) + (SELECT MIN(QUESTION_ID)
                                                                                    FROM survey_question)) AS id) AS t2
 WHERE t1.QUESTION_ID >= t2.id
       and QUESTION_TYPE = 5
 ORDER BY t1.QUESTION_ID
 LIMIT 1)

    </select>
    <insert id="insertQuestionBatch" parameterType="java.util.List">
        insert into survey_question
        (QUESTION_ID,PLAN_ID,QUESTION_NAME,QUESTION_TYPE,TYPE,SCORE,REQUIRED_FLAG,RANGE_ID,RANGE_NAME,BUSINESS_TYPE,REFERENCE_ANSWER,CREATED_BY,CREATED_TIME)
        values
        <foreach collection="list" item="question" separator=",">
            (#{question.questionId},#{question.planId},#{question.questionName},#{question.questionType},#{question.type},#{question.score},#{question.requiredFlag},
            #{question.rangeId},#{question.rangeName},#{question.businessType},#{question.referenceAnswer},#{question.createdBy},#{question.createdTime})
        </foreach>
    </insert>

</mapper>